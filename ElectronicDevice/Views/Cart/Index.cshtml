@model IEnumerable<ElectronicDevice.Models.Cart>
@{
    ViewBag.Title = "Giỏ hàng";
}

@using System.Globalization;
@{
    CultureInfo cul = CultureInfo.GetCultureInfo("vi-VN");
}


<!--================Home Banner Area =================-->
<!-- breadcrumb start-->
<section class="breadcrumb breadcrumb_bg" id="my_banner">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-6 text-center">
                <div class="breadcrumb_iner">
                    <div class="breadcrumb_iner_item">
                        <h2>Giỏ hàng</h2>
                        <p>Trang chủ<span> > </span>Giỏ hàng</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 text-center">
                <div class="breadcrumb_iner">
                    <div class="breadcrumb_iner_item">
                        <img src="~/wwwroot/img/my-image/banner/cart.png" alt="" width="350">
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- breadcrumb start-->
<!--================Cart Area =================-->
<section class="cart_area mt-3">
    <div class="container bg-white p-4">
        <div class="cart_inner">
            <div class="table-responsive" id="content-cart-page">
                @if (Model.Count() <= 0)
                {

                    <div style="text-align:center">
                        <img src="~/wwwroot/imageUpload/shopping_cart.png" alt="Chưa có sản phẩm nào trong giỏ!" style="width:200px;height:auto" />
                        <p style="margin: 15px 0px 30px; ">Không có sản phẩm nào trong giỏ hàng của bạn.</p>
                        <a class="btn_1" href="@Url.Action("Index","Product")">Tiếp tục mua hàng</a>
                    </div>
                }
                else
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col"><input type="checkbox" id="selectAll" onclick="selectAllRecord()"></th>
                                <th scope="col">Sản phẩm</th>
                                <th scope="col">Giá</th>
                                <th scope="col">Số lượng</th>
                                <th scope="col" width="150px">Thành tiền</th>
                                <th scope="col" data-toggle="tooltip" title="Xóa các mục đã chọn!" id="btn-delete-selected" onclick="deleteRecordSelected()"><i class="fas fa-trash-alt"></i></th>
                            </tr>
                        </thead>
                        <tbody id="cart-container">
                            @foreach (var item in Model)
                            {
                                <tr class="data-table" id="@item.ID_Product" onload="totalMoney(@item.ID_Product)">
                                    <td scope="col"><input type="checkbox" onclick="changeStatus(@item.ID_Product)"></td>
                                    <td>
                                        <div class="media">
                                            <div class="d-flex">
                                                <img src="@Url.Content("~/wwwroot/imageUpload/"+item.Product.Image)" alt="" width="150" />
                                            </div>
                                            <div class="media-body">
                                                <p>@item.Product.Name</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <h5 id="price">
                                            <!--Price of product item-->
                                            @String.Format(cul, "{0:N0}", item.Product.Price)&#8363;
                                        </h5>
                                    </td>
                                    <td>
                                        <div class="d-flex flex-row">
                                            <div class="up-down decrease" onclick="alterProductOrder('decrease', @item.Product.Amount,@item.ID_Product,@item.ID_Account)">
                                                <i class="fas fa-minus"></i>
                                            </div>
                                            <div class="number_product_order">
                                                <input class="text-center" id="number_order" onkeypress="return isNumberKey(event)" onfocusout="focusOut(@item.ID_Product)" onfocus="getOldValue(@item.ID_Product)" onkeyup="checkValid(@item.Product.Amount,@item.ID_Product,@item.ID_Account)" onchange="totalMoney(@item.ID_Product)" type="text" value="@item.Amount">
                                            </div>
                                            <div class="up-down increment" onclick="alterProductOrder('increment', @item.Product.Amount,@item.ID_Product,@item.ID_Account)">
                                                <i class="fas fa-plus"></i>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <h5 id="totalProductItem">
                                            <!--total money to pay product item-->
                                        </h5>
                                    </td>
                                    <td onclick="deleteRecord(@item.ID_Product,@item.ID_Account)"><i class="fas fa-trash-alt"></i></td>
                                </tr>
                            }

                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>
                                    <h5>Tổng tiền</h5>
                                </td>
                                <td>
                                    <h5 id="totalPay">
                                        <!--total pay-->
                                    </h5>
                                </td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="checkout_btn_inner float-right">
                        <a class="btn_1" href="@Url.Action("Index","Product")">Tiếp tục mua hàng</a>
                        <div class="btn_1 checkout_btn_1" id="btn_pay" onclick="payNow(@Session["ID"])">Thanh toán</div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>


<!--modal confirm delete product-->
<!-- Modal -->
<div class="modal fade" id="modalConfirmOder" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body " id="modalConfirmOderContent" style="font-size:22px ">
                <!--content-->
            </div>
            <div class="modal-footer mx-auto" style="border:unset">
                <button type="button" id="btn_close" class="btn btn-secondary" data-dismiss="modal">
                    <!--Button Close-->
                </button>
                <button type="button" id="btn_save" onclick="deleteRecordConfirmed()" class="btn btn-primary">
                    <!--Button Save-->
                </button>
            </div>
        </div>
    </div>
</div>

<!--alert message-->
<div class="alert hide" id="alert_message">
    <div id="icon-alert-message"><i class="fas fa-exclamation-circle"></i></div>
    <span class="msg">Warning: This is a warning alert!</span>
    <div class="close-btn-alert">
        <span class="fas fa-times"></span>
    </div>
</div>

@section script{

    <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
    <script>

        $(document).ready(function () {
            $('#totalPay').text((0).toLocaleString('it-IT', { style: 'currency', currency: 'VND' }));
            $('tr').each(function () {
                totalMoney($(this).attr('id'));
            });

            $('.close-btn-alert').click(function () {
                $('.alert').removeClass("show");
                $('.alert').addClass("hide");
            });

        });

        function deleteRecord(id_product, id_account) {
            console.log(id_product);
            console.log(id_account);
            $('#btn_save').attr("onclick", "deleteRecordConfirmed(" + id_product + "," + id_account+")");
            $('#modalConfirmOderContent').text("Bạn muốn xóa sản phẩm này?");
            $('#btn_close').text("Không");
            $('#btn_save').show();
            $('#btn_save').text("Xóa");
            $('#btn_close').css({ "background-color": "#007bff", "border": "1px solid #007bff", "width": "200px" })
            $('#btn_save').css({ "background-color": "rgb(255, 66, 78)", "border": "1px solid rgb(255, 66, 78)", "width": "200px" });
            jQuery.noConflict();
            $('#modalConfirmOder').modal("show");
        }

        function deleteRecordConfirmed(id_product,id_account) {
            console.log(id_product);
            console.log(id_account);
            $.ajax({
                url: "/Cart/DeleteCart?id_product=" + id_product +"&&id_account="+id_account,
                type: "POST",
               /* data: { id_product: id_product, id_account: id_account},*/
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (result) {
                    jQuery.noConflict();
                    $('#modalConfirmOder').modal("hide");
                    showAlertMessage(result.data, true);
                    $('#' + id_product).remove();
                    loadTotalMustPay();
                },
                error: (error) => {
                    jQuery.noConflict();
                    $('#modalConfirmOder').modal("hide");
                    showAlertMessage("Xóa thất bại", false);
                }
            });
        }

        function focusOut(id) {

            if ($('#' + id).find('#number_order').val() == '' || $('#' + id).find('#number_order').val() == null) {
                showAlertMessage("Số lượng không được trống!", false);
                $('#' + id).find('#number_order').val(1);
                totalMoney(id);
                var element = $('#' + id).find('input[type="checkbox"]');
                if (element.prop("checked")) {
                    var numberOrder = parseInt($('#' + id).find('#number_order').val());
                    var oldMoney = parseFloat($('#totalPay').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
                    var price = parseFloat($('#' + id).find('#price').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
                    $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(oldMoney + price * numberOrder));
                }
                $('#' + id).find('#number_order').data('val', $('#' + id).find('#number_order').val());
                var id_account = window.location.href.split("=")[1];
                addProductToCart(id, id_account, parseInt($('#' + id).find('#number_order').val()));
            }
        }

        @* function to change status selected of record when click ckeck box for all record *@
        function selectAllRecord() {
            if ($('#selectAll').prop("checked")) {
                $('#totalPay').text((0).toLocaleString('it-IT', { style: 'currency', currency: 'VND' }));
                $('tr[class="data-table"]').each(function () {
                    $(this).find('input[type="checkbox"]').prop("checked", true);
                    changeStatus($(this).attr('id'));
                });
            } else {
                $('#totalPay').text((0).toLocaleString('it-IT', { style: 'currency', currency: 'VND' }));
                $('tr[class="data-table"]').each(function () {
                    $(this).find('input[type="checkbox"]').prop("checked", false);
                });
            }
        }


        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

        function getOldValue(id) {
            var element = $('#' + id).find('#number_order');
            element.data('val', element.val());
        }

        @*function to check value order number when typping*@
        function checkValid(maxOrder, id,id_account) {

            var oldNumberOrder = $('#' + id).find('#number_order').data('val');
            var numberOrder = parseInt($('#' + id).find('#number_order').val());
            var element = $('#' + id).find('input[type="checkbox"]');
            var price = parseFloat($('#' + id).find('#price').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
            var oldMoney = parseFloat($('#totalPay').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);


            if ($('#' + id).find('#number_order').val() == '' ||  $('#' + id).find('#number_order').val() == null) {
                if (element.prop("checked") && parseInt($('#' + id).find('#totalProductItem').text().trim().replace(/([,.€])+/g, '').split(' ')[0])!=0) {
                    $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(oldMoney - price * oldNumberOrder));
                }
                $('#' + id).find('#totalProductItem').text(new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(0));
                $('#' + id).find('#number_order').data('val', 0);
                return;
            }

            if (numberOrder > maxOrder) {
                showAlertMessage("Số lượng mua tối đa cho sản phẩm này là " + maxOrder, false);

                $('#' + id).find('#number_order').val(maxOrder);
            } else if (numberOrder < 1) {
                $('#modalConfirmOderContent').text("Bạn muốn xóa sản phẩm này?");
                $('#btn_close').text("Không");
                $('#btn_save').show();
                $('#btn_save').text("Xóa");
                $('#btn_close').css({ "background-color": "#007bff", "border": "1px solid #007bff", "width": "200px" })
                $('#btn_save').css({ "background-color": "rgb(255, 66, 78)", "border": "1px solid rgb(255, 66, 78)", "width": "200px" });
                $('#btn_save').attr("onclick", "deleteRecordConfirmed(" + id + "," + id_account + ")");
                //$('#btn_save').data('id_product', id);
                //$('#btn_save').data('id_account', id_account);

                jQuery.noConflict();
                $('#modalConfirmOder').modal("show");
                $('#' + id).find('#number_order').val(1);
            }
            numberOrder = parseInt($('#' + id).find('#number_order').val());
            totalMoney(id);
            addProductToCart(id, id_account, numberOrder);
            if (element.prop("checked")) {
                console.log(oldNumberOrder);
                $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(oldMoney + price * (numberOrder - oldNumberOrder)));
            }
            $('#' + id).find('#number_order').data('val', $('#' + id).find('#number_order').val());
        }

        @* function to alter value order number when click up or down*@
        function alterProductOrder(status, maxOrder, id, id_account) {
            var numberOrder = parseInt($('#' + id).find('#number_order').val());
            var oldMoney = parseFloat($('#totalPay').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
            var price = parseFloat($('#' + id).find('#price').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
            var element = $('#' + id).find('input[type="checkbox"]');
            if (status == 'decrease') {
                if (numberOrder > 1) {
                    $('#' + id).find('#number_order').val(numberOrder - 1);
                    if (element.prop("checked")) {
                        $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(oldMoney - price));
                    }
                }
                else {
                    $('#modalConfirmOderContent').text("Bạn muốn xóa sản phẩm này?");
                    $('#btn_close').text("Không");
                    $('#btn_save').show();
                    $('#btn_save').text("Xóa");
                    $('#btn_close').css({ "background-color": "#007bff", "border": "1px solid #007bff", "width": "200px" })
                    $('#btn_save').css({ "background-color": "rgb(255, 66, 78)", "border": "1px solid rgb(255, 66, 78)", "width": "200px" });

                    $('#btn_save').attr("onclick", "deleteRecordConfirmed(" + id + "," + id_account + ")");
                    //$('#btn_save').data('id_product', id);
                    //$('#btn_save').data('id_account', id_account);

                    jQuery.noConflict();
                    $('#modalConfirmOder').modal("show");
                    $('#' + id).find('#number_order').val(1);

                }
            } else {
                if (numberOrder < maxOrder) {
                    $('#' + id).find('#number_order').val(numberOrder + 1);
                    if (element.prop("checked")) {
                        $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(oldMoney + price));
                    }
                }
                else {
                    showAlertMessage("Số lượng mua tối đa cho sản phẩm này là " + maxOrder, false);
                    $('#' + id).find('#number_order').val(maxOrder);
                }
            }
            totalMoney(id);
            addProductToCart(id, id_account, parseInt($('#' + id).find('#number_order').val()));
        }

        @* function to change status selected of record when click ckeck box *@
        function changeStatus(id) {
            var element = $('#' + id).find('input[type="checkbox"]');
            var oldMoney = parseFloat($('#totalPay').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
            var elementMoney = parseFloat($('#' + id).find('#totalProductItem').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
            if (element.prop("checked")) {
                if (checkAllRecordChecked()) {
                    $('.table').find('thead').find('input[type="checkbox"]').prop("checked", true);
                }
                $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(oldMoney + elementMoney));
            } else {
                $('#selectAll').prop("checked", false);
                $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(oldMoney - elementMoney));
            }
        }

        @* function to set value of total price of a record *@
        function totalMoney(id) {
            var numberOrder = parseInt($('#' + id).find('#number_order').val());
            var price = parseFloat($('#' + id).find('#price').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
            //$('#' + id).find('#totalProductItem').text((numberOrder * price).toLocaleString('it-IT', { style: 'currency', currency: 'VND' }));
            $('#' + id).find('#totalProductItem').text(new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(numberOrder * price));
        }

        function showAlertMessage(message, messageState) {
            if (messageState) {
                $('#alert_message').css({ "background": "#C5F3D7", "border-left": "8px solid #2BD971" });
                $("#icon-alert-message").html('<i class="fas fa-check-circle"></i>');
                $("#icon-alert-message").find('i').css({ "color": "#2BD971" });
                $(".msg").css({ "color": "#24AD5F" });
                $(".close-btn-alert").css({ "background": "#2BD971", "color": "#24AD5F" });
                $(".close-btn-alert").find('.fas').css({ "color": "#24AD5F" });
                $(".close-btn-alert").hover(function (e) {
                    $(this).css("background-color", e.type === "mouseenter" ? "#38F5A3" : "#2BD971")
                })
            } else {
                $('#alert_message').css({ "background": "#FFE1E3", "border-left": "8px solid #FF4456" });
                $("#icon-alert-message").html('<i class="fas fa-exclamation-circle"></i>');
                $("#icon-alert-message").find('i').css({ "color": "#FE4950" });
                $(".msg").css({ "color": "#F694A9" });
                $(".close-btn-alert").css({ "background": "#FF9CA4", "color": "#FD4653" });
                $(".close-btn-alert").find('.fas').css({ "color": "#FD4653" });
                $(".close-btn-alert").hover(function (e) {
                    $(this).css("background-color", e.type === "mouseenter" ? "#FFBDC2" : "#FF9CA4")
                })
            }

            $('.msg').text(message);
            $('.alert').addClass("show");
            $('.alert').removeClass("hide");
            $('.alert').addClass("showAlert");
            setTimeout(function () {
                $('.alert').removeClass("show");
                $('.alert').addClass("hide");
            }, 3000);
        };

        /*check all record is checked*/
        function checkAllRecordChecked() {
            var result = true;;
            $('#cart-container>tr').each(function () {
                if ($(this).find('input[type="checkbox"]').prop("checked") == false) {
                    result = false;
                    return;
                }
            });
            return result;
        };

        function deleteRecordSelected() {
            $('#modalConfirmOderContent').text("Bạn muốn xóa sản phẩm đang chọn?");
            $('#btn_close').text("Không");
            $('#btn_save').show();
            $('#btn_save').text("Xóa");
            $('#btn_close').css({ "background-color": "#007bff", "border": "1px solid #007bff", "width": "200px" })
            $('#btn_save').css({ "background-color": "rgb(255, 66, 78)", "border": "1px solid rgb(255, 66, 78)", "width": "200px" });
            $("#btn_save").attr("onclick", "deleteAllRecordConfirmed()");
            jQuery.noConflict();
            $('#modalConfirmOder').modal('show');
        };

        function deleteAllRecordConfirmed() {

            var arrIdProduct = new Array();
            $('#cart-container>tr').each(function () {
                if ($(this).find('input[type="checkbox"]').prop("checked") == true) {
                    arrIdProduct.push($(this).attr('id'));
                }
            })

            var id_account = window.location.href.split("=")[1];
            /*?id_product = " + arrIdProduct + " && id_account=" + id_account,*/
            $.ajax({
                url: "/Cart/DeleteSelectedCart",
                type: "POST",
                dataType:'json',
                data: { id_product: arrIdProduct, id_account: id_account},
               /* contentType: "application/json;charset=utf-8",*/
                traditional: true,
                success: function (result) {
                    jQuery.noConflict();
                    $('#modalConfirmOder').modal('hide');
                    showAlertMessage(result.data, true);
                    for (var i = 0; i <= arrIdProduct.length; i++) {
                        $('#' + arrIdProduct[i]).remove();
                    }
                    loadTotalMustPay();
                },
                error: (error) => {
                    jQuery.noConflict();
                    $('#modalConfirmOder').modal('hide');
                    showAlertMessage("Xóa thất bại", false);
                }
            });
        };

        function addProductToCart(id_product, id_account,amount) {
            /*var amount = $("#numberProductOrder").val();*/
            $.ajax({
                url: "/cart/addcart",
                type: "post",
                data: { id_product: id_product, id_account: id_account,amount:amount },
                datatype: "json",
                contenttype: "application/json;charset=utf-8",
                success: function (result) {
                    loadTotalMustPay();
                },
                error: (error) => {

                }
            });
        }

        function loadTotalMustPay() {
            var total = 0;
            $('#cart-container>tr').each(function () {
                if ($(this).find('input[type="checkbox"]').prop("checked") == true) {
                    var id = $(this).attr("id");
                    var numberOrder = parseInt($('#' + id).find('#number_order').val());
                    var price = parseFloat($('#' + id).find('#price').text().trim().replace(/([,.€])+/g, '').split(' ')[0]);
                    total += numberOrder * price;
                }
            });
            $('#totalPay').text(new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'VND' }).format(total));

            if ($('#cart-container>tr').length <=1) {
                var html = '';
                var href_a = '@Url.Action("Index","Product")';
                html += '<div style="text-align:center">';
                html += '<img src="wwwroot/imageUpload/shopping_cart.png" alt="Chưa có sản phẩm nào trong giỏ!" style="width:200px;height:auto" />';
                html += ' <p style="margin: 15px 0px 30px; ">Không có sản phẩm nào trong giỏ hàng của bạn.</p>';
                html += ' <a class="btn_1" href="' + href_a + '">Tiếp tục mua hàng</a>';
                html += '</div>';
                $('#content-cart-page').html(html);
            }
        }

        function payNow(id_account) {
            var arr_id_product = new Array();

            $('#cart-container>tr').each(function () {
                if ($(this).find('input[type="checkbox"]').prop("checked") == true) {
                    arr_id_product.push($(this).attr('id'));
                }
            });

            if (arr_id_product.length <= 0) {
                showAlertMessage("Chưa có sản phẩm nào được chọn mua!", false);
            } else {
                $.ajax({
                    url: "/Cart/DeleteSelectedCart",
                    type: "POST",
                    dataType: 'json',
                    data: { id_product: arrIdProduct, id_account: id_account },
                    /* contentType: "application/json;charset=utf-8",*/
                    traditional: true,
                    success: function (result) {
                        jQuery.noConflict();
                        $('#modalConfirmOder').modal('hide');
                        showAlertMessage(result.data, true);
                        for (var i = 0; i <= arrIdProduct.length; i++) {
                            $('#' + arrIdProduct[i]).remove();
                        }
                        loadTotalMustPay();
                    },
                    error: (error) => {
                        jQuery.noConflict();
                        $('#modalConfirmOder').modal('hide');
                        showAlertMessage("Xóa thất bại", false);
                    }
                });
            }
        }
    </script>
}
